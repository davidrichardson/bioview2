<EMAIL>
Hi Andy,

You are now a member of Bioview.  I'll update the spec along with the technical component of our emails.  Anyway back to what we were discussing...

Thanks for clarifying that, I had a feeling that it would be something even higher level that I needed to think about.

Probably something to get together and discuss and hack about a bit but how does this sound,

Expand the feature types to include non-coding exon as well as intron.

geneBean
-chromStart
-chromStop
-chromName
-geneName
-chromSeq (sequence from start to stop only and optional) -transcriptArr
	transcriptBean
	-geneName
	-transcriptName
	-transcriptStart
	-transcriptStop
	-featureArr
          featureBean (already exists)
          -featureStart
          -featureStop
          -featureType (see FeatureType enum)
          -featureColor
          -featureName

So the above structure allows a portion of the chromosome to be rendered (with sequence available) between 2 points, the coordinates of the features are in relation to the chromosome coordinates, of course all transcript and feature coords will need to be between the chromosome coords.

How does this sound?  Perhaps once we get moved you could come over and we can throw a first draft together.  I'm going to get started on the drawing components as they will all be driven from the feature and featureType levels and also test the orientation flipping option (render on X vs. render on Y).

Thanks

Keiran
</EMAIL>

<EMAIL>
andy.menzies wrote:
I can help out on BioView, I've been thinking that we could use some better image code for representing transcripts.

Generally transcripts only contain exons, introns are the gaps between the exons on the genome. But it depends what type of sequence you are trying to render.  If you are drawing a cDNA or CDS the introns are already removed and all the exon line up one after another. If you are drawing a chunk of chromosome, then a transcript will be an intermittent feature.  The exons will have introns between them.

You may also have to think about coding and non-coding exons, A CDS will only contain coding exons, but a cDNA will also contain UTR exons. 
These are still exons, they still exists on the genome, they just don't represent the protein.  And worse still, some exons are half coding and half non-coding.  If you take a look at ensembl contig view, they render coding portions of the exons as solid boxes and non-coding portions as outline boxes.  It might be worth thinking about making some sort of difference between the two types.

Andy
</EMAIL>

<EMAIL>
Keiran wrote:
 Hi Andy,
  
I've got a bit if a question for you.  I'm planning the next phase of 
the BioView tools and wondered if you'd be able to give me a bit of 
input (be quiet nice if you wanted to become a project member).
 
I've got the system for storing and representing 'features' on a 
sequence and scale nicely laid out from the chromatogram work, they 
just need expanding slightly.  My main issue that I need advice on is 
the higher level structures for representing genes and transcripts.
 
My plan was to have something like
 
geneBean
-geneName
-transcriptArr
    transcriptBean
    -geneName
    -transcriptName
    -transcriptSequence
    -featureArr
        featureBean (already exists)
        -featureStart
        -featureStop
        -featureType (see FeatureType enum)
        -featureColor
        -featureName
 
My question is (something I should know), does the sequence for a 
transcript include both intronic and exonic sequence?

Keiran
</EMAIL>


Exon/Feature/Genomic drawing components
---------------------------------------

FeatureType's will be need to be expanded to incorporate intron, domain will be
classed as exon.

The existing FeatureBean is adequate for holding the coordinate information,
although a higher level Transcript object to link multiple exons and introns
together will be needed.  Ideally a helper method will be used to generate a
Transcript object from a list of coordinates e.g. provide exon boundry
coordinates along with length of sequence, objects for each intron and exon
generated and stored in Tracnscript object automatically.  Ability to pass
multiple transcripts into the gene object (don't really want to build a full
gene modeling data structure, but if you want to keep rendering of multiple
transcripts simple this is probably the best way).

The scale will be generated based on the transcript/gene length.

For rendering of amplimers against the gene/transcript/exon... a list of domains
will be provided to the renderer.  This will use the existing 'bumping'
algortihm to prevent overlap of domains and calculation of image dimensions.
There should be the ability to display any labels for the respective domains.

A major function that should be provided is the ability to change the
orientation of the rendered image.  This is simple until text labels are
involved (however this may be handled fine by the transform function).

Advanced functions (harder things)
----------------------------------
Would love to provide image map overlay as this could allow additional
functionallity (when used in an application context), for example:
1. Ability to zoom into regions
2. Ability to select elements

